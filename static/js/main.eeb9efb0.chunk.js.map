{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Heading/Heading.module.css","components/Notification/Notification.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Heading/Heading.js","components/Notification/Notification.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","findContact","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactReducer","devTools","process","persistor","persistStore","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handelChange","e","target","value","onSubmit","preventDefault","normalizeName","toLowerCase","find","changeEnterName","alert","toUpperCase","className","style","form","lable","type","onChange","pattern","title","required","input","button","Filter","label","placeholder","ContactItem","item","onClick","porpTypes","PropTypes","arrayOf","object","string","ContactList","normalizedFilter","findContacts","includes","length","getUserContacts","list","map","el","Container","children","container","Heading","Notification","notification","connect","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.eeb9efb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2Yene\",\"button\":\"ContactItem_button__2jo5K\",\"number\":\"ContactItem_number__1jOFv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1Y_te\",\"input\":\"Filter_input__1xav2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Pmhh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__hjpDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__3VTyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__13t3a\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction(\r\n    'phonebook/AddContact',\r\n    (name, number) => ({\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        },\r\n    }),\r\n);\r\n\r\nexport const deleteContact = createAction('phonebook/DeleteContact');\r\n\r\nexport const findContact = createAction('phonebook/FindContact');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, findContact } from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [findContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport contactReducer from './phonebook-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/phonebook-actions';\nimport style from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => state.contacts.items);\n\n    const handelChange = e => {\n        const { name, value } = e.target;\n\n        if (name === 'name') {\n            setName(value);\n        }\n        if (name === 'number') {\n            setNumber(value);\n        }\n    };\n\n    const changeEnterName = name => {\n        const normalizeName = name.toLowerCase();\n\n        return contacts.find(\n            ({ name }) => normalizeName === name.toLowerCase(),\n        );\n    };\n\n    const handelSubmit = e => {\n        e.preventDefault();\n\n        if (changeEnterName(name)) {\n            setName('');\n            setNumber('');\n            return alert(\n                `This contact \"${name.toUpperCase()}\" has already been added to your Phonebook`,\n            );\n        }\n\n        dispatch(addContact(name, number));\n\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handelSubmit} className={style.form}>\n            <label className={style.lable}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handelChange}\n                    pattern=\"^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$\"\n                    title=\"ÐÐ¼Ñ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¸Ð· Ð±ÑÐºÐ², Ð°Ð¿Ð¾ÑÑÑÐ¾ÑÐ°, ÑÐ¸ÑÐµ Ð¸ Ð¿ÑÐ¾Ð±ÐµÐ»Ð¾Ð². ÐÐ°Ð¿ÑÐ¸Ð¼ÐµÑ Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan Ð¸ Ñ. Ð¿.\"\n                    required\n                    className={style.input}\n                />\n            </label>\n\n            <label className={style.lable}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handelChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"ÐÐ¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð° Ð´Ð¾Ð»Ð¶ÐµÐ½ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¸ÑÑ Ð¸ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð°ÑÑ Ð¿ÑÐ¾Ð±ÐµÐ»Ñ, ÑÐ¸ÑÐµ, ÐºÑÑÐ³Ð»ÑÐµ ÑÐºÐ¾Ð±ÐºÐ¸ Ð¸ Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸Ð½Ð°ÑÑÑÑ Ñ +\"\n                    required\n                    className={style.input}\n                />\n            </label>\n\n            <button type=\"submit\" className={style.button}>\n                Add contact\n            </button>\n        </form>\n    );\n};\nContactForm.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    handelChange: PropTypes.func,\n    handelSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findContact } from '../../redux/phonebook-actions';\nimport style from './Filter.module.css';\n\nconst Filter = () => {\n    const value = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch();\n\n    const handelChange = e => dispatch(findContact(e.target.value));\n\n    return (\n        <label className={style.label}>\n            Find contacts by name\n            <input\n                placeholder=\"Search contact\"\n                type=\"text\"\n                value={value}\n                onChange={handelChange}\n                className={style.input}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook-actions';\nimport style from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <li key={id} className={style.item}>\n            <span>{name}</span>:<span className={style.number}>{number}</span>\n            <button\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n                className={style.button}\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactList.module.css';\n\nconst ContactList = () => {\n    const getUserContacts = (items, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        const findContacts = items.filter(item =>\n            item.name.toLowerCase().includes(normalizedFilter),\n        );\n\n        if (findContacts.length === 0) {\n            alert(`No contact ${normalizedFilter.toUpperCase()}`);\n        }\n        return findContacts;\n    };\n\n    const { items, filter } = useSelector(state => state.contacts);\n    const contacts = getUserContacts(items, filter);\n\n    return (\n        <ul className={style.list}>\n            {contacts.map(el => (\n                <ContactItem\n                    key={el.id}\n                    name={el.name}\n                    number={el.number}\n                    id={el.id}\n                />\n            ))}\n        </ul>\n    );\n};\n\nContactItem.porpTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={style.container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport style from './Heading.module.css';\n\nconst Heading = ({ title }) => (\n    <h2 className={style.title}>{title}</h2>\n);\n\nHeading.propTypes = { title: PropTypes.string.isRequired };\n\nexport default Heading;\n","import { notification } from './Notification.module.css';\r\n\r\nconst Notification = () => (\r\n    <p className={notification}>Enter your first contact</p>\r\n);\r\n\r\nexport default Notification;\r\n","import ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport Container from './Container';\nimport Heading from './Heading';\nimport Notification from './Notification';\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => {\n    return (\n        <Container>\n            <Heading title={'Phonebook'} />\n            <ContactForm />\n            <Heading title={'Contacts'} />\n            {contacts.length >= 2 && <Filter />}\n\n            {contacts.length > 0 ? <ContactList /> : <Notification />}\n        </Container>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        contacts: state.contacts.items,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <PersistGate loading={null} persistor={persistor}>\r\n                <App />\r\n            </PersistGate>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__HPzCi\",\"lable\":\"ContactForm_lable__1C9Qq\",\"input\":\"ContactForm_input__12Yyi\",\"button\":\"ContactForm_button__d83b3\"};"],"sourceRoot":""}